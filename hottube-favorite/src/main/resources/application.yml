server:
  port: 40004
spring:
  datasource:
    url: jdbc:mysql://${hotsharp.db.host}:3306/hottube?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: ${hotsharp.db.pw}
    # Spring Boot 默认是不注入这些属性值的，需要自己绑定
    # druid 数据源专有配置
    # 初始建立的连接数，因为连接远程数据库久不使用会失效，所以按回默认的初始0条就好了
    initialSize: 0
    # 连接池中的最小空闲连接数 默认是0 虽然建立连接会耗时，但是使用远程数据库的话，为了不保留失活连接，还是按回默认0条空闲好了
    minIdle: 0
    # 最大活动连接数
    maxActive: 20
    # 如果连接池中的所有连接都已被占用，请求新连接的线程将最多等待60秒，然后会抛出异常
    maxWait: 60000
    # 空闲连接的存活时间为1分钟，默认是30分钟，设1分钟是因为远程数据库3~4分钟就自动失效，如果连接不断开就会卡住20秒，严重影响查询体验
    minEvictableIdleTimeMillis: 60000
    # 每隔1分钟就检查一次，回收超过最小空闲时间的空闲连接
    timeBetweenEvictionRunsMillis: 30000
    # 验证连接的查询语句
    validationQuery: SELECT 1 FROM DUAL
    # 设置在连接空闲时是否执行验证查询语句，如果设置为 true，则连接池会在空闲时定期执行 validationQuery 验证连接的有效性。
    testWhileIdle: true
    # 设置在从连接池中获取连接时是否执行验证查询语句
    testOnBorrow: false
    # 设置在归还连接到连接池时是否执行验证查询语句
    testOnReturn: false
    # 设置是否缓存 PreparedStatement，默认为 true，即缓存 PreparedStatement，提高性能
    poolPreparedStatements: true
    # 配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
    # 如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority
    # 则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j
    filters: stat,wall,log4j
    # 每个连接在缓存 PreparedStatement 的最大数量
    maxPoolPreparedStatementPerConnectionSize: 20
    # 是否启用全局统计。如果设置为 true，则 Druid 的监控统计功能将会全局启用
    useGlobalDataSourceStat: true
    # 连接属性配置，druid.stat.mergeSql=true 表示是否合并 SQL；druid.stat.slowSqlMillis=500 表示慢 SQL 的阈值，单位为毫秒
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500